name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  buildAndTest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Test Book Service
        working-directory: ./Books
        run: |
          npm install
          npm test

      - name: Test User Service
        working-directory: ./User
        run: |
          npm install
          npm test

      - name: Test Order Service
        working-directory: ./Orders
        run: |
          npm install
          npm test

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --json > snyk-report.json
      - name: Upload Snyk report
        uses: actions/upload-artifact@v2
        with:
          name: snyk-report
          path: snyk-report.json
      - name: Download Snyk report artifact
        uses: actions/download-artifact@v2
        with:
          name: snyk-report
          path: snyk-report
  scan:
    name: SecretsScan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}

  dockerize:
    name: Dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Docker image Books
        run: docker build -t books -f ./Books .
